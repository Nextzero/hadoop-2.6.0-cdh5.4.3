From 10d71ad469a00cc3fc6a77ff48d80f8c15d68e3c Mon Sep 17 00:00:00 2001
From: Karthik Kambatla <kasha@cloudera.com>
Date: Tue, 7 Apr 2015 17:28:34 -0700
Subject: [PATCH 529/596] Revert "YARN-3011. Possible IllegalArgumentException
 in ResourceLocalizationService might lead NM to
 crash. Contributed by Varun Saxena"

This reverts commit 742633e13d94dfa0a0c4e17a0ea1828bf162fcae.
---
 .../localizer/ResourceLocalizationService.java     |   10 ---------
 .../localizer/TestResourceLocalizationService.java |   23 ++------------------
 2 files changed, 2 insertions(+), 31 deletions(-)

diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java
index 4236392..d719791 100644
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java
+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java
@@ -803,13 +803,6 @@ public void addResource(LocalizerResourceRequestEvent request) {
               .getResource().getRequest(), e.getMessage()));
             LOG.error("Local path for public localization is not found. "
                 + " May be disks failed.", e);
-          } catch (IllegalArgumentException ie) {
-            rsrc.unlock();
-            publicRsrc.handle(new ResourceFailedLocalizationEvent(request
-                .getResource().getRequest(), ie.getMessage()));
-            LOG.error("Local path for public localization is not found. "
-                + " Incorrect path. " + request.getResource().getRequest()
-                .getPath(), ie);
           } catch (RejectedExecutionException re) {
             rsrc.unlock();
             publicRsrc.handle(new ResourceFailedLocalizationEvent(request
@@ -1031,9 +1024,6 @@ LocalizerHeartbeatResponse update(
         } catch (IOException e) {
           LOG.error("local path for PRIVATE localization could not be " +
             "found. Disks might have failed.", e);
-        } catch (IllegalArgumentException e) {
-          LOG.error("Inorrect path for PRIVATE localization."
-              + next.getResource().getFile(), e);
         } catch (URISyntaxException e) {
             //TODO fail? Already translated several times...
         }
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/TestResourceLocalizationService.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/TestResourceLocalizationService.java
index e3f0f96..b8ab5bb 100644
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/TestResourceLocalizationService.java
+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/TestResourceLocalizationService.java
@@ -1335,33 +1335,14 @@ public void testPublicResourceAddResourceExceptions() throws Exception {
             user, appId);
       Assert.assertNull(tracker.getLocalizedResource(pubReq));
 
-      // test IllegalArgumentException
-      String name = Long.toHexString(r.nextLong());
-      URL url = getPath("/local/PRIVATE/" + name + "/");
-      final LocalResource rsrc =
-          BuilderUtils.newLocalResource(url, LocalResourceType.FILE,
-          LocalResourceVisibility.PUBLIC, r.nextInt(1024) + 1024L,
-          r.nextInt(1024) + 2048L);
-      final LocalResourceRequest pubReq1 = new LocalResourceRequest(rsrc);
-      Map<LocalResourceVisibility, Collection<LocalResourceRequest>> req1 =
-          new HashMap<LocalResourceVisibility, 
-          Collection<LocalResourceRequest>>();
-      req1.put(LocalResourceVisibility.PUBLIC,
-          Collections.singletonList(pubReq1));
+      // test RejectedExecutionException
       Mockito
         .doCallRealMethod()
         .when(dirsHandlerSpy)
         .getLocalPathForWrite(isA(String.class), Mockito.anyLong(),
           Mockito.anyBoolean());
-      // send request
-      spyService.handle(new ContainerLocalizationRequestEvent(c, req1));
-      dispatcher.await();
-      tracker =
-          spyService.getLocalResourcesTracker(LocalResourceVisibility.PUBLIC,
-          user, appId);
-      Assert.assertNull(tracker.getLocalizedResource(pubReq));
 
-      // test RejectedExecutionException by shutting down the thread pool
+      // shutdown the thread pool
       PublicLocalizer publicLocalizer = spyService.getPublicLocalizer();
       publicLocalizer.threadPool.shutdown();
 
-- 
1.7.9.5

