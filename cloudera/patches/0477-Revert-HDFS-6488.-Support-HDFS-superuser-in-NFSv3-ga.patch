From 7c3d8b3b45e654b7f473a7a5992f05417902dcd5 Mon Sep 17 00:00:00 2001
From: Yongjun Zhang <yzhang@cloudera.com>
Date: Thu, 12 Mar 2015 12:20:34 -0700
Subject: [PATCH 477/596] Revert "HDFS-6488. Support HDFS superuser in NFSv3
 gateway. Contributed by Brandon Li"

This reverts commit fdfe803b649d5a455f47ba8089293a76644bf747.

Conflicts:
	hadoop-hdfs-project/hadoop-hdfs/src/site/markdown/HdfsNfsGateway.md
---
 .../apache/hadoop/hdfs/nfs/conf/NfsConfigKeys.java |   14 --------------
 .../hadoop/hdfs/nfs/nfs3/RpcProgramNfs3.java       |   12 ++----------
 2 files changed, 2 insertions(+), 24 deletions(-)

diff --git a/hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/conf/NfsConfigKeys.java b/hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/conf/NfsConfigKeys.java
index 09ee579..9e4aaf5 100644
--- a/hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/conf/NfsConfigKeys.java
+++ b/hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/conf/NfsConfigKeys.java
@@ -73,18 +73,4 @@
   
   public static final String  NFS_METRICS_PERCENTILES_INTERVALS_KEY = "nfs.metrics.percentiles.intervals";
   public static final String  NFS_METRICS_PERCENTILES_INTERVALS_DEFAULT = "";
-  
-  /*
-   * HDFS super-user is the user with the same identity as NameNode process
-   * itself and the super-user can do anything in that permissions checks never
-   * fail for the super-user. If the following property is configured, the
-   * superuser on NFS client can access any file on HDFS. By default, the super
-   * user is not configured in the gateway. Note that, even the the superuser is
-   * configured, "nfs.exports.allowed.hosts" still takes effect. For example,
-   * the superuser will not have write access to HDFS files through the gateway
-   * if the NFS client host is not allowed to have write access in
-   * "nfs.exports.allowed.hosts".
-   */
-  public static final String  NFS_SUPERUSER_KEY = "nfs.superuser";
-  public static final String  NFS_SUPERUSER_DEFAULT = "";
 }
diff --git a/hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/RpcProgramNfs3.java b/hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/RpcProgramNfs3.java
index aaf8135..f6e28fb 100644
--- a/hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/RpcProgramNfs3.java
+++ b/hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/RpcProgramNfs3.java
@@ -33,6 +33,7 @@
 import org.apache.hadoop.fs.CreateFlag;
 import org.apache.hadoop.fs.DirectoryListingStartAfterNotFoundException;
 import org.apache.hadoop.fs.FSDataInputStream;
+import org.apache.hadoop.fs.FileSystem.Statistics;
 import org.apache.hadoop.fs.FileUtil;
 import org.apache.hadoop.fs.FsStatus;
 import org.apache.hadoop.fs.Options;
@@ -164,7 +165,6 @@
   private JvmPauseMonitor pauseMonitor;
   private Nfs3HttpServer infoServer = null;
   static Nfs3Metrics metrics;
-  private String superuser;
 
   public RpcProgramNfs3(NfsConfiguration config, DatagramSocket registrationSocket,
       boolean allowInsecurePorts) throws IOException {
@@ -199,9 +199,6 @@ public RpcProgramNfs3(NfsConfiguration config, DatagramSocket registrationSocket
     UserGroupInformation.setConfiguration(config);
     SecurityUtil.login(config, NfsConfigKeys.DFS_NFS_KEYTAB_FILE_KEY,
         NfsConfigKeys.DFS_NFS_KERBEROS_PRINCIPAL_KEY);
-    superuser = config.get(NfsConfigKeys.NFS_SUPERUSER_KEY,
-        NfsConfigKeys.NFS_SUPERUSER_DEFAULT);
-    LOG.info("Configured HDFS superuser is " + superuser);
 
     if (!enableDump) {
       writeDumpDir = null;
@@ -585,18 +582,13 @@ ACCESS3Response access(XDR xdr, SecurityHandler securityHandler,
     }
 
     try {
+      // HDFS-5804 removed supserUserClient access
       attrs = writeManager.getFileAttr(dfsClient, handle, iug);
 
       if (attrs == null) {
         LOG.error("Can't get path for fileId: " + handle.getFileId());
         return new ACCESS3Response(Nfs3Status.NFS3ERR_STALE);
       }
-      if(iug.getUserName(securityHandler.getUid(), "unknown").equals(superuser)) {
-        int access = Nfs3Constant.ACCESS3_LOOKUP | Nfs3Constant.ACCESS3_DELETE
-            | Nfs3Constant.ACCESS3_EXECUTE | Nfs3Constant.ACCESS3_EXTEND
-            | Nfs3Constant.ACCESS3_MODIFY | Nfs3Constant.ACCESS3_READ;
-        return new ACCESS3Response(Nfs3Status.NFS3_OK, attrs, access);
-      }
       int access = Nfs3Utils.getAccessRightsForUserGroup(
           securityHandler.getUid(), securityHandler.getGid(),
           securityHandler.getAuxGids(), attrs);
-- 
1.7.9.5

