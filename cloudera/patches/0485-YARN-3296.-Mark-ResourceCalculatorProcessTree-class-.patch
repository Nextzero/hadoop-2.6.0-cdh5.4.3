From c84309f413e785303cd30cdcb2af66c9d0322371 Mon Sep 17 00:00:00 2001
From: Junping Du <junping_du@apache.org>
Date: Sun, 8 Mar 2015 14:47:35 -0700
Subject: [PATCH 485/596] YARN-3296. Mark ResourceCalculatorProcessTree class
 as Public for configurable resource monitoring.
 Contributed by Hitesh Shah (cherry picked from
 commit 7ce3c7635392c32f0504191ddd8417fb20509caa)

(cherry picked from commit b91e1b0feb8f9f7913f5d9c09ad1b1cd8dcbeb49)

Conflicts:
	hadoop-yarn-project/CHANGES.txt
---
 .../yarn/util/ResourceCalculatorProcessTree.java   |   25 ++++++++++++++------
 1 file changed, 18 insertions(+), 7 deletions(-)

diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ResourceCalculatorProcessTree.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ResourceCalculatorProcessTree.java
index 8c22c9e..6ee8834 100644
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ResourceCalculatorProcessTree.java
+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ResourceCalculatorProcessTree.java
@@ -22,7 +22,8 @@
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
-import org.apache.hadoop.classification.InterfaceAudience.Private;
+import org.apache.hadoop.classification.InterfaceAudience.Public;
+import org.apache.hadoop.classification.InterfaceStability.Evolving;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.conf.Configured;
 
@@ -30,7 +31,8 @@
  * Interface class to obtain process resource usage
  *
  */
-@Private
+@Public
+@Evolving
 public abstract class ResourceCalculatorProcessTree extends Configured {
   static final Log LOG = LogFactory
       .getLog(ResourceCalculatorProcessTree.class);
@@ -90,9 +92,12 @@ public long getCumulativeRssmem() {
    * @param olderThanAge processes above this age are included in the
    *                      memory addition
    * @return cumulative virtual memory used by the process-tree in bytes,
-   *          for processes older than this age.
+   *          for processes older than this age. return 0 if it cannot be
+   *          calculated
    */
-  public abstract long getCumulativeVmem(int olderThanAge);
+  public long getCumulativeVmem(int olderThanAge) {
+    return 0;
+  }
 
   /**
    * Get the cumulative resident set size (rss) memory used by all the processes
@@ -104,7 +109,9 @@ public long getCumulativeRssmem() {
    *          for processes older than this age. return 0 if it cannot be
    *          calculated
    */
-  public abstract long getCumulativeRssmem(int olderThanAge);
+  public long getCumulativeRssmem(int olderThanAge) {
+    return 0;
+  }
 
   /**
    * Get the CPU time in millisecond used by all the processes in the
@@ -113,7 +120,9 @@ public long getCumulativeRssmem() {
    * @return cumulative CPU time in millisecond since the process-tree created
    *         return 0 if it cannot be calculated
    */
-  public abstract long getCumulativeCpuTime();
+  public long getCumulativeCpuTime() {
+    return 0;
+  }
 
   /**
    * Get the CPU usage by all the processes in the process-tree based on
@@ -123,7 +132,9 @@ public long getCumulativeRssmem() {
    * @return percentage CPU usage since the process-tree was created
    *         return {@link CpuTimeTracker#UNAVAILABLE} if it cannot be calculated
    */
-  public abstract float getCpuUsagePercent();
+  public float getCpuUsagePercent() {
+    return -1;
+  }
 
   /** Verify that the tree process id is same as its process group id.
    * @return true if the process id matches else return false.
-- 
1.7.9.5

