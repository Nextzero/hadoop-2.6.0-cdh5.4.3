From ab3edd241879c76bf87b093d877d452ef138f3f7 Mon Sep 17 00:00:00 2001
From: Karthik Kambatla <kasha@cloudera.com>
Date: Wed, 15 May 2013 01:35:06 -0700
Subject: [PATCH 070/596] MR1: CLOUDERA-BUILD. Backport fixes from
 MAPREDUCE-323 to allow underscores in usernames and
 jobnames

Reason: Customer request
Ref: CDH-11431
Author: Karthik Kambatla
(cherry picked from commit 0fafe1043fd60266b1966fd7f6457465cadb02c9)
(cherry picked from commit e847fd69f31ff38851f519d2e8e41a8fbe3b9fe5)
(cherry picked from commit 1b5fe33c437bfbfa5a7ce07b0418c797e15f7c47)
(cherry picked from commit f6e50b7963583b0b36d5e6f67abaad3fad3ff906)
---
 .../org/apache/hadoop/mapred/JobHistory.java       |   40 +++++++++++++++++++-
 .../src/webapps/job/jobhistory.jsp                 |   15 ++++++--
 2 files changed, 50 insertions(+), 5 deletions(-)

diff --git a/hadoop-mapreduce1-project/src/mapred/org/apache/hadoop/mapred/JobHistory.java b/hadoop-mapreduce1-project/src/mapred/org/apache/hadoop/mapred/JobHistory.java
index fbf7ead..76cf446 100644
--- a/hadoop-mapreduce1-project/src/mapred/org/apache/hadoop/mapred/JobHistory.java
+++ b/hadoop-mapreduce1-project/src/mapred/org/apache/hadoop/mapred/JobHistory.java
@@ -92,6 +92,7 @@
 public class JobHistory {
   
   static final long VERSION = 1L;
+  static final String UNDERSCORE_ESCAPE = "%5F";
   public static final Log LOG = LogFactory.getLog(JobHistory.class);
   private static final char DELIMITER = ' ';
   static final char LINE_DELIMITER_CHAR = '.';
@@ -958,7 +959,44 @@ public synchronized void handle(Map<Keys, String> values){
 
       throw e;
     }
- 
+
+  // This code will be inefficient if the subject contains dozens of underscores
+  static String escapeUnderscores(String escapee) {
+    return replaceStringInstances(escapee, "_", UNDERSCORE_ESCAPE);
+  }
+
+  static String nonOccursString(String logFileName) {
+    int adHocIndex = 0;
+
+    String unfoundString = "q" + adHocIndex;
+
+    while (logFileName.contains(unfoundString)) {
+      unfoundString = "q" + ++adHocIndex;
+    }
+
+    return unfoundString + "q";
+  }
+
+  // I tolerate this code because I expect a low number of
+  // occurrences in a relatively short string
+  static String replaceStringInstances
+  (String logFileName, String old, String replacement) {
+    int index = logFileName.indexOf(old);
+
+    while (index > 0) {
+      logFileName = (logFileName.substring(0, index)
+              + replacement
+              + replaceStringInstances
+              (logFileName.substring(index + old.length()),
+                      old, replacement));
+
+      index = logFileName.indexOf(old);
+    }
+
+    return logFileName;
+  }
+
+
   /**
    * Helper class for logging or reading back events related to job start, finish or failure. 
    */
diff --git a/hadoop-mapreduce1-project/src/webapps/job/jobhistory.jsp b/hadoop-mapreduce1-project/src/webapps/job/jobhistory.jsp
index 54fd08f..5fba471 100644
--- a/hadoop-mapreduce1-project/src/webapps/job/jobhistory.jsp
+++ b/hadoop-mapreduce1-project/src/webapps/job/jobhistory.jsp
@@ -442,9 +442,13 @@ window.location.href = url;
     Set<String> displayedJobs = new HashSet<String>();
     for (int i = start - 1; i < start + length - 1; ++i) {
       Path jobFile = jobFiles[i];
+      String fname = jobFile.getName();
+      String marker = JobHistory.nonOccursString(fname);
+      String reescapedFname = JobHistory.replaceStringInstances(fname,
+                  JobHistory.UNDERSCORE_ESCAPE, marker);
       
       String decodedJobFileName =
-          JobHistory.JobInfo.decodeJobHistoryFileName(jobFile.getName());
+          JobHistory.JobInfo.decodeJobHistoryFileName(reescapedFname);
 
       String[] jobDetails = decodedJobFileName.split("_");
       String trackerStartTime = jobDetails[1];
@@ -452,9 +456,12 @@ window.location.href = url;
                       + "_" + jobDetails[JOB_ID_START + 1]
                       + "_" + jobDetails[JOB_ID_START + 2]);
       String submitTimestamp = jobDetails[FILENAME_SUBMIT_TIMESTAMP_PART];
-      String userName = jobDetails[FILENAME_USER_PART];
-      String jobName = jobDetails[FILENAME_JOBNAME_PART];
-     
+
+      String userName = JobHistory.replaceStringInstances(jobDetails[FILENAME_USER_PART],
+                  marker, JobHistory.UNDERSCORE_ESCAPE);
+      String jobName = JobHistory.replaceStringInstances(jobDetails[FILENAME_JOBNAME_PART],
+                 marker, JobHistory.UNDERSCORE_ESCAPE);
+
       // Check if the job is already displayed. There can be multiple job 
       // history files for jobs that have restarted
       if (displayedJobs.contains(jobId)) {
-- 
1.7.9.5

